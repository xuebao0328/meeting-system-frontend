<template>
  <div class="user-center">
    <!-- 顶部导航栏 -->
    <header class="top-bar">
      <div class="page-title">个人中心</div>
      <div class="user-info">
        <div class="notification-icon">
          <i class="el-icon-bell"></i>
          <span class="badge" v-if="unreadCount">{{ unreadCount }}</span>
        </div>
        <div class="user-profile">
          <img src="/avatar-placeholder.png" alt="头像" class="avatar" />
          <span class="username">{{ userProfileInfo.name }}</span>
          <el-dropdown trigger="click">
            <i class="el-icon-arrow-down el-icon--right" style="cursor: pointer;"></i>
            <el-dropdown-menu slot="dropdown">
              <el-dropdown-item @click.native="goToAdminCenter">管理中心</el-dropdown-item>
              <el-dropdown-item @click.native="logout">退出登录</el-dropdown-item>
            </el-dropdown-menu>
          </el-dropdown>
        </div>
      </div>
    </header>

    <!-- 内容区域 -->
    <div class="content-container">
      <!-- 个人信息卡片 -->
      <el-card class="info-card">
        <div class="info-header">
          <div class="avatar-section">
            <div class="avatar">
              <img src="/avatar-placeholder.png" alt="用户头像" />
            </div>
          </div>
          <div class="info-section">
            <div class="info-row">
              <div class="info-item">
                <span class="info-label">姓名：</span>
                <span class="info-value">{{ userProfileInfo.name }}</span>
              </div>
              <div class="info-item">
                <span class="info-label">性别：</span>
                <span class="info-value">{{ userProfileInfo.gender }}</span>
              </div>
            </div>
            <div class="info-row">
              <div class="info-item">
                <span class="info-label">手机号码：</span>
                <span class="info-value">{{ userProfileInfo.phone }}</span>
              </div>
              <div class="info-item">
                <span class="info-label">电子邮箱：</span>
                <span class="info-value">{{ userProfileInfo.email }}</span>
              </div>
            </div>
            <div class="info-row">
              <div class="info-item">
                <span class="info-label">身份证号：</span>
                <span class="info-value">{{ userProfileInfo.idNumber }}</span>
              </div>
            </div>
          </div>
          <div class="edit-button-wrapper">
            <el-button 
              icon="el-icon-edit" 
              class="edit-button"
              @click="editUserProfile"
            >
              编辑
            </el-button>
          </div>
        </div>
      </el-card>
      
      <!-- 标签页和表格 -->
      <el-card class="tabs-card">
        <el-tabs v-model="activeProfileTab" @tab-click="handleProfileTabChange">
          <el-tab-pane label="缴费状态" name="1">
            <el-table 
              :data="meetingData" 
              class="meeting-table"
              :stripe="true"
              border
            >
              <el-table-column 
                prop="name" 
                label="会议名称" 
                width="30%" 
                :show-overflow-tooltip="true"
              />
              <el-table-column 
                prop="amount" 
                label="缴费金额" 
              />
              <el-table-column 
                prop="status" 
                label="状态" 
              >
                <template slot-scope="scope">
                  <el-tag :type="scope.row.status === '待支付' ? 'warning' : 'success'">
                    {{ scope.row.status }}
                  </el-tag>
                </template>
              </el-table-column>
              <el-table-column 
                prop="time" 
                label="支付时间" 
              />
              <el-table-column 
                prop="operation" 
                label="操作" 
              >
                <template slot-scope="scope">
                  <el-button v-if="scope.row.operation" type="text" size="small">
                    {{ scope.row.operation }}
                  </el-button>
                </template>
              </el-table-column>
            </el-table>
            <div class="pagination-container">
              <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[5, 10, 20, 50]"
                :page-size="pageSize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="meetingData.length">
              </el-pagination>
            </div>
          </el-tab-pane>
          <el-tab-pane label="历史记录" name="2">
            <el-table 
              :data="meetingData" 
              class="meeting-table"
              :stripe="true"
            >
              <el-table-column 
                prop="name" 
                label="会议名称" 
                width="30%" 
                :show-overflow-tooltip="true"
              />
              <el-table-column 
                prop="amount" 
                label="缴费金额" 
              />
              <el-table-column 
                prop="status" 
                label="状态" 
              >
                <template slot-scope="scope">
                  <el-tag :type="scope.row.status === '待支付' ? 'warning' : 'success'">
                    {{ scope.row.status }}
                  </el-tag>
                </template>
              </el-table-column>
              <el-table-column 
                prop="time" 
                label="支付时间" 
              />
              <el-table-column 
                prop="operation" 
                label="操作" 
              >
                <template slot-scope="scope">
                  <el-button v-if="scope.row.operation" type="text" size="small">
                    {{ scope.row.operation }}
                  </el-button>
                </template>
              </el-table-column>
            </el-table>
            <div class="pagination-container">
              <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[5, 10, 20, 50]"
                :page-size="pageSize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="meetingData.length">
              </el-pagination>
            </div>
          </el-tab-pane>
        </el-tabs>
      </el-card>
    </div>

    <!-- 编辑个人信息弹窗 -->
    <el-dialog 
      title="编辑个人信息" 
      :visible.sync="editDialogVisible"
      width="500px"
      :close-on-click-modal="false"
    >
      <el-form :model="editForm" :rules="editRules" ref="editForm" label-width="100px">
        <el-form-item label="姓名" prop="name">
          <el-input v-model="editForm.name" placeholder="请输入姓名"></el-input>
        </el-form-item>
        <el-form-item label="性别" prop="gender">
          <el-radio-group v-model="editForm.gender">
            <el-radio label="男">男</el-radio>
            <el-radio label="女">女</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="手机号码" prop="phone">
          <el-input v-model="editForm.phone" placeholder="请输入手机号码"></el-input>
        </el-form-item>
        <el-form-item label="电子邮箱" prop="email">
          <el-input v-model="editForm.email" placeholder="请输入电子邮箱"></el-input>
        </el-form-item>
        <el-form-item label="身份证号" prop="idNumber">
          <el-input v-model="editForm.idNumber" placeholder="请输入身份证号"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="cancelEdit">取 消</el-button>
        <el-button type="primary" @click="submitEditForm" :loading="submitLoading">确 定</el-button>
        <el-button type="warning" @click="showChangePasswordDialog" style="float: left">修改密码</el-button>
      </div>
    </el-dialog>
    
    <!-- 修改密码弹窗 -->
    <el-dialog 
      title="修改密码" 
      :visible.sync="passwordDialogVisible"
      width="500px"
      :close-on-click-modal="false"
    >
      <el-form :model="passwordForm" :rules="passwordRules" ref="passwordForm" label-width="120px">
        <el-form-item label="原密码" prop="oldPassword">
          <el-input v-model="passwordForm.oldPassword" type="password" placeholder="请输入原密码" show-password></el-input>
        </el-form-item>
        <el-form-item v-if="!oldPasswordVerified" style="margin-bottom: 0;">
          <el-button type="primary" @click="verifyOldPassword" :loading="verifyLoading">验证原密码</el-button>
        </el-form-item>
        
        <template v-if="oldPasswordVerified">
          <el-form-item label="新密码" prop="newPassword">
            <el-input v-model="passwordForm.newPassword" type="password" placeholder="请输入新密码" show-password></el-input>
          </el-form-item>
          <el-form-item label="确认新密码" prop="confirmPassword">
            <el-input v-model="passwordForm.confirmPassword" type="password" placeholder="请再次输入新密码" show-password></el-input>
          </el-form-item>
        </template>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="cancelPasswordChange">取 消</el-button>
        <el-button type="primary" @click="submitPasswordForm" :loading="passwordSubmitLoading" 
                  :disabled="!oldPasswordVerified">确 定</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { logout } from '@/api/auth';

export default {
  name: 'UserCenter',
  data() {
    // 确认密码验证规则
    const validateConfirmPassword = (rule, value, callback) => {
      if (value !== this.passwordForm.newPassword) {
        callback(new Error('两次输入的密码不一致'));
      } else {
        callback();
      }
    };
    
    return {
      unreadCount: 3,
      activeProfileTab: '1',
      currentPage: 1,
      pageSize: 10,
      userProfileInfo: {
        name: '',
        gender: '',
        phone: '',
        email: '',
        idNumber: ''
      },
      meetingData: [
        {
          name: '2023年度科技创新大会',
          amount: '￥1200',
          status: '已支付',
          time: '2023-04-15 14:30',
          operation: '查看详情'
        },
        {
          name: '人工智能与未来发展论坛',
          amount: '￥980',
          status: '已支付',
          time: '2023-06-20 09:45',
          operation: '查看详情'
        },
        {
          name: '国际医疗器械展览会',
          amount: '￥1500',
          status: '待支付',
          time: '-',
          operation: '去支付'
        },
        {
          name: '绿色能源与可持续发展大会',
          amount: '￥800',
          status: '已支付',
          time: '2023-09-05 11:20',
          operation: '查看详情'
        },
        {
          name: '数字经济与产业变革峰会',
          amount: '￥1350',
          status: '已支付',
          time: '2023-10-12 15:40',
          operation: '查看详情'
        }
      ],
      
      // 编辑弹窗相关数据
      editDialogVisible: false,
      submitLoading: false,
      editForm: {
        name: '',
        gender: '',
        phone: '',
        email: '',
        idNumber: ''
      },
      editRules: {
        name: [
          { required: true, message: '请输入姓名', trigger: 'blur' },
          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }
        ],
        phone: [
          { required: true, message: '请输入手机号码', trigger: 'blur' },
          { pattern: /^1[3-9]\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }
        ],
        email: [
          { required: true, message: '请输入电子邮箱', trigger: 'blur' },
          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }
        ],
        idNumber: [
          { pattern: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/, message: '请输入正确的身份证号', trigger: 'blur' }
        ]
      },
      
      // 修改密码相关数据
      passwordDialogVisible: false,
      oldPasswordVerified: false,
      verifyLoading: false,
      passwordSubmitLoading: false,
      passwordForm: {
        oldPassword: '',
        newPassword: '',
        confirmPassword: ''
      },
      passwordRules: {
        oldPassword: [
          { required: true, message: '请输入原密码', trigger: 'blur' },
          { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }
        ],
        newPassword: [
          { required: true, message: '请输入新密码', trigger: 'blur' },
          { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }
        ],
        confirmPassword: [
          { required: true, message: '请再次输入新密码', trigger: 'blur' },
          { validator: validateConfirmPassword, trigger: 'blur' }
        ]
      }
    };
  },
  created() {
    this.fetchUserInfo();
  },
  methods: {
    fetchUserInfo() {
      try {
        const userStr = localStorage.getItem('user');
        if (userStr) {
          const user = JSON.parse(userStr);
          // 更新用户信息
          this.userProfileInfo = {
            name: user.username || '',
            gender: user.gender || '未知',
            phone: user.phone || '',
            email: user.email || '',
            idNumber: user.idNumber || ''
          };
        }
      } catch (error) {
        console.error('获取用户信息失败:', error);
      }
    },
    editUserProfile() {
      // 打开编辑弹窗并初始化表单数据
      this.editForm = {
        name: this.userProfileInfo.name,
        gender: this.userProfileInfo.gender,
        phone: this.userProfileInfo.phone,
        email: this.userProfileInfo.email,
        idNumber: this.userProfileInfo.idNumber
      };
      this.editDialogVisible = true;
    },
    cancelEdit() {
      this.editDialogVisible = false;
      this.$refs.editForm.resetFields();
    },
    submitEditForm() {
      this.$refs.editForm.validate(valid => {
        if (valid) {
          this.submitLoading = true;
          
          // 这里应调用后端API更新用户信息
          // 由于工具调用受限，我们模拟API调用行为
          setTimeout(() => {
            // 更新本地用户信息
            this.userProfileInfo = {
              ...this.editForm
            };
            
            // 将更新后的信息保存到localStorage
            const userStr = localStorage.getItem('user');
            if (userStr) {
              try {
                const user = JSON.parse(userStr);
                user.username = this.editForm.name;
                user.gender = this.editForm.gender;
                user.phone = this.editForm.phone;
                user.email = this.editForm.email;
                user.idNumber = this.editForm.idNumber;
                localStorage.setItem('user', JSON.stringify(user));
              } catch (error) {
                console.error('保存用户信息失败:', error);
              }
            }
            
            this.$message.success('个人信息更新成功');
            this.submitLoading = false;
            this.editDialogVisible = false;
          }, 1000);
        }
      });
    },
    showChangePasswordDialog() {
      this.passwordDialogVisible = true;
      this.oldPasswordVerified = false;
      this.passwordForm = {
        oldPassword: '',
        newPassword: '',
        confirmPassword: ''
      };
      if (this.$refs.passwordForm) {
        this.$refs.passwordForm.resetFields();
      }
    },
    cancelPasswordChange() {
      this.passwordDialogVisible = false;
      if (this.$refs.passwordForm) {
        this.$refs.passwordForm.resetFields();
      }
    },
    verifyOldPassword() {
      this.$refs.passwordForm.validateField('oldPassword', (errorMessage) => {
        if (!errorMessage) {
          this.verifyLoading = true;
          
          // 这里应调用后端API验证原密码是否正确
          // 由于工具调用受限，我们模拟API调用行为
          setTimeout(() => {
            // 假设验证成功
            this.oldPasswordVerified = true;
            this.verifyLoading = false;
            this.$message.success('原密码验证成功，请设置新密码');
          }, 1000);
        }
      });
    },
    submitPasswordForm() {
      this.$refs.passwordForm.validate(valid => {
        if (valid) {
          this.passwordSubmitLoading = true;
          
          // 这里应调用后端API更新密码
          // 由于工具调用受限，我们模拟API调用行为
          setTimeout(() => {
            this.$message.success('密码修改成功');
            this.passwordSubmitLoading = false;
            this.passwordDialogVisible = false;
          }, 1000);
        }
      });
    },
    handleProfileTabChange(tab) {
      console.log('切换到标签: ', tab.name);
    },
    handleSizeChange(size) {
      this.pageSize = size;
      console.log('每页显示数量: ', size);
    },
    handleCurrentChange(val) {
      this.currentPage = val;
    },
    goToAdminCenter() {
      this.$router.push('/admin-center');
    },
    logout() {
      logout(); // 调用API中的logout方法清除token
      this.$message.success('退出登录成功');
      this.$router.push('/'); // 跳转到首页
    }
  }
};
</script>

<style scoped>
.user-center {
  padding: 20px;
  background-color: #f5f7fa;
  min-height: 100vh;
}

/* 顶部导航栏 */
.top-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #fff;
  padding: 15px 20px;
  border-radius: 4px;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
  margin-bottom: 20px;
}

.page-title {
  font-size: 20px;
  font-weight: bold;
  color: #333;
}

.user-info {
  display: flex;
  align-items: center;
  gap: 20px;
}

.notification-icon {
  position: relative;
  cursor: pointer;
}

.badge {
  position: absolute;
  top: -5px;
  right: -5px;
  background-color: #f56c6c;
  color: white;
  border-radius: 50%;
  padding: 2px 6px;
  font-size: 12px;
}

.user-profile {
  display: flex;
  align-items: center;
  gap: 10px;
}

.avatar {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  object-fit: cover;
}

.username {
  font-weight: 500;
}

/* 内容区域 */
.content-container {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

/* 个人信息卡片 */
.info-card {
  margin-bottom: 20px;
}

.info-header {
  display: flex;
  align-items: flex-start;
}

.avatar-section {
  margin-right: 30px;
}

.avatar-section .avatar {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  overflow: hidden;
}

.avatar-section .avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.info-section {
  flex: 1;
}

.info-row {
  display: flex;
  margin-bottom: 15px;
}

.info-item {
  margin-right: 40px;
  min-width: 200px;
}

.info-label {
  color: #606266;
}

.info-value {
  font-weight: 500;
  color: #303133;
}

.edit-button-wrapper {
  margin-left: auto;
}

.edit-button {
  padding: 7px 15px;
}

/* 标签页和表格 */
.tabs-card {
  margin-bottom: 20px;
}

.meeting-table {
  width: 100%;
  margin-bottom: 20px;
}

.pagination-container {
  text-align: right;
  padding: 10px 0;
}

/* 弹窗样式 */
.dialog-footer {
  display: flex;
  justify-content: flex-end;
}

.el-form-item {
  margin-bottom: 22px;
}
</style> 